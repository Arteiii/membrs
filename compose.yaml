services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "1024:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    container_name: membrs-backend
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: db
      BACKEND_URL: ${URL}/api
      FRONTEND_URL: ${URL}/

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: membrs-frontend
    depends_on:
      - backend
    expose:
      - "3000"
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${URL}/api
      NEXT_PUBLIC_FRONTEND_URL: ${URL}/

  db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:6500"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  postgres-data:
